services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./database:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - prometheus_monitoring

  backend:
    build: ./backend
    depends_on:
      - postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      NODE_ENV: development
    ports:
      - "3001:3001"
    networks:
      - prometheus_monitoring
    volumes:
      - ./backend:/app
      - /app/node_modules

  frontend:
    build: ./frontend
    ports:
      - "3003:3000"
    depends_on:
      - backend
    networks:
      - prometheus_monitoring

  prometheus:
    image: prom/prometheus:v2.47.2
    ports:
      - "9090:9090"
    networks:
      - prometheus_monitoring
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@postgres:5432/image_db?sslmode=disable"
    links:
      - postgres
      - prometheus

  grafana:
    image: grafana/grafana:10.2.2
    ports:
      - "3000:3000"
    networks:
      - prometheus_monitoring

networks:
  prometheus_monitoring:
    driver: bridge
